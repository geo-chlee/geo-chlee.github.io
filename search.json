[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Changho Lee",
    "section": "",
    "text": "I am a doctoral student studying Geospatial Information Sciences.\nResearch Interest\n\nSpatial Statistics\nSpatial Optimization\nMachine and Deep Learning\n\nContacts: changho.lee@utdallas.edu / Website"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "CV",
    "section": "",
    "text": "Changho’s CV"
  },
  {
    "objectID": "assignment1.html",
    "href": "assignment1.html",
    "title": "Assignment1",
    "section": "",
    "text": "Try Anscombe’s example\n\n\ndata(anscombe)  # Load Anscombe's data\nView(anscombe) # View the data\nsummary(anscombe)\n\n       x1             x2             x3             x4           y1        \n Min.   : 4.0   Min.   : 4.0   Min.   : 4.0   Min.   : 8   Min.   : 4.260  \n 1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 6.5   1st Qu.: 8   1st Qu.: 6.315  \n Median : 9.0   Median : 9.0   Median : 9.0   Median : 8   Median : 7.580  \n Mean   : 9.0   Mean   : 9.0   Mean   : 9.0   Mean   : 9   Mean   : 7.501  \n 3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.:11.5   3rd Qu.: 8   3rd Qu.: 8.570  \n Max.   :14.0   Max.   :14.0   Max.   :14.0   Max.   :19   Max.   :10.840  \n       y2              y3              y4        \n Min.   :3.100   Min.   : 5.39   Min.   : 5.250  \n 1st Qu.:6.695   1st Qu.: 6.25   1st Qu.: 6.170  \n Median :8.140   Median : 7.11   Median : 7.040  \n Mean   :7.501   Mean   : 7.50   Mean   : 7.501  \n 3rd Qu.:8.950   3rd Qu.: 7.98   3rd Qu.: 8.190  \n Max.   :9.260   Max.   :12.74   Max.   :12.500  \n\n## Simple version\nplot(anscombe$x1,anscombe$y1)\n\n\n# Create four model objects\nlm1 &lt;- lm(y1 ~ x1, data=anscombe)\nsummary(lm1)\n\n\nCall:\nlm(formula = y1 ~ x1, data = anscombe)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.92127 -0.45577 -0.04136  0.70941  1.83882 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0001     1.1247   2.667  0.02573 * \nx1            0.5001     0.1179   4.241  0.00217 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6665,    Adjusted R-squared:  0.6295 \nF-statistic: 17.99 on 1 and 9 DF,  p-value: 0.00217\n\nlm2 &lt;- lm(y2 ~ x2, data=anscombe)\nsummary(lm2)\n\n\nCall:\nlm(formula = y2 ~ x2, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.9009 -0.7609  0.1291  0.9491  1.2691 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)    3.001      1.125   2.667  0.02576 * \nx2             0.500      0.118   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6662,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002179\n\nlm3 &lt;- lm(y3 ~ x3, data=anscombe)\nsummary(lm3)\n\n\nCall:\nlm(formula = y3 ~ x3, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.1586 -0.6146 -0.2303  0.1540  3.2411 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0025     1.1245   2.670  0.02562 * \nx3            0.4997     0.1179   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6663,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002176\n\nlm4 &lt;- lm(y4 ~ x4, data=anscombe)\nsummary(lm4)\n\n\nCall:\nlm(formula = y4 ~ x4, data = anscombe)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-1.751 -0.831  0.000  0.809  1.839 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0017     1.1239   2.671  0.02559 * \nx4            0.4999     0.1178   4.243  0.00216 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6667,    Adjusted R-squared:  0.6297 \nF-statistic:    18 on 1 and 9 DF,  p-value: 0.002165\n\nplot(anscombe$x1,anscombe$y1)\nabline(coefficients(lm1))\n\n\n\nplot(anscombe$x2,anscombe$y2)\nabline(coefficients(lm2))\n\n\n\nplot(anscombe$x3,anscombe$y3)\nabline(coefficients(lm3))\n\n\n\nplot(anscombe$x4,anscombe$y4)\nabline(coefficients(lm4))\n\n\n\n## Fancy version (per help file)\n\nff &lt;- y ~ x\nmods &lt;- setNames(as.list(1:4), paste0(\"lm\", 1:4))\n\n# Plot using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  ## or   ff[[2]] &lt;- as.name(paste0(\"y\", i))\n  ##      ff[[3]] &lt;- as.name(paste0(\"x\", i))\n  mods[[i]] &lt;- lmi &lt;- lm(ff, data = anscombe)\n  print(anova(lmi))\n}\n\nAnalysis of Variance Table\n\nResponse: y1\n          Df Sum Sq Mean Sq F value  Pr(&gt;F)   \nx1         1 27.510 27.5100   17.99 0.00217 **\nResiduals  9 13.763  1.5292                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y2\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx2         1 27.500 27.5000  17.966 0.002179 **\nResiduals  9 13.776  1.5307                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y3\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx3         1 27.470 27.4700  17.972 0.002176 **\nResiduals  9 13.756  1.5285                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\nAnalysis of Variance Table\n\nResponse: y4\n          Df Sum Sq Mean Sq F value   Pr(&gt;F)   \nx4         1 27.490 27.4900  18.003 0.002165 **\nResiduals  9 13.742  1.5269                    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nsapply(mods, coef)  # Note the use of this function\n\n                  lm1      lm2       lm3       lm4\n(Intercept) 3.0000909 3.000909 3.0024545 3.0017273\nx1          0.5000909 0.500000 0.4997273 0.4999091\n\nlapply(mods, function(fm) coef(summary(fm)))\n\n$lm1\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0000909  1.1247468 2.667348 0.025734051\nx1          0.5000909  0.1179055 4.241455 0.002169629\n\n$lm2\n            Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.000909  1.1253024 2.666758 0.025758941\nx2          0.500000  0.1179637 4.238590 0.002178816\n\n$lm3\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0024545  1.1244812 2.670080 0.025619109\nx3          0.4997273  0.1178777 4.239372 0.002176305\n\n$lm4\n             Estimate Std. Error  t value    Pr(&gt;|t|)\n(Intercept) 3.0017273  1.1239211 2.670763 0.025590425\nx4          0.4999091  0.1178189 4.243028 0.002164602\n\n# Preparing for the plots\nop &lt;- par(mfrow = c(2, 2), mar = 0.1+c(4,4,1,1), oma =  c(0, 0, 2, 0))\n\n# Plot charts using for loop\nfor(i in 1:4) {\n  ff[2:3] &lt;- lapply(paste0(c(\"y\",\"x\"), i), as.name)\n  plot(ff, data = anscombe, col = \"red\", pch = 21, bg = \"orange\", cex = 1.2,\n       xlim = c(3, 19), ylim = c(3, 13))\n  abline(mods[[i]], col = \"blue\")\n}\nmtext(\"Anscombe's 4 Regression data sets\", outer = TRUE, cex = 1.5)\n\n\n\npar(op)\n\n\nGoogle “Generative art”\n\n\n\n\nVVRRR - Manolo April, 2018\n\n\n\n\n\nDmitri Cherniak, Ringers #879 (Estimate: $2???3 million)\n\n\n\nExport the results after running Fall.R\n\n1) Generate data to visualize\n\nlibrary(gsubfn)\n\nLoading required package: proto\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Define elements in plant art\n# Each image corresponds to a different axiom, rules, angle and depth\n\n# Leaf of Fall\n\naxiom=\"X\"\nrules=list(\"X\"=\"F-[[X]+X]+F[+FX]-X\", \"F\"=\"FF\")\nangle=22.5\ndepth=6\n\n\nfor (i in 1:depth) axiom=gsubfn(\".\", rules, axiom)\n\nactions=str_extract_all(axiom, \"\\\\d*\\\\+|\\\\d*\\\\-|F|L|R|\\\\[|\\\\]|\\\\|\") %&gt;% unlist\n\nstatus=data.frame(x=numeric(0), y=numeric(0), alfa=numeric(0))\npoints=data.frame(x1 = 0, y1 = 0, x2 = NA, y2 = NA, alfa=90, depth=1)\n\n\n# Generating data\n# Note: may take a minute or two\n\nfor (action in actions)\n{\n  if (action==\"F\")\n  {\n    x=points[1, \"x1\"]+cos(points[1, \"alfa\"]*(pi/180))\n    y=points[1, \"y1\"]+sin(points[1, \"alfa\"]*(pi/180))\n    points[1,\"x2\"]=x\n    points[1,\"y2\"]=y\n    data.frame(x1 = x, y1 = y, x2 = NA, y2 = NA,\n               alfa=points[1, \"alfa\"],\n               depth=points[1,\"depth\"]) %&gt;% rbind(points)-&gt;points\n  }\n  if (action %in% c(\"+\", \"-\")){\n    alfa=points[1, \"alfa\"]\n    points[1, \"alfa\"]=eval(parse(text=paste0(\"alfa\",action, angle)))\n  }\n  if(action==\"[\"){\n    data.frame(x=points[1, \"x1\"], y=points[1, \"y1\"], alfa=points[1, \"alfa\"]) %&gt;%\n      rbind(status) -&gt; status\n    points[1, \"depth\"]=points[1, \"depth\"]+1\n  }\n\n  if(action==\"]\"){\n    depth=points[1, \"depth\"]\n    points[-1,]-&gt;points\n    data.frame(x1=status[1, \"x\"], y1=status[1, \"y\"], x2=NA, y2=NA,\n               alfa=status[1, \"alfa\"],\n               depth=depth-1) %&gt;%\n      rbind(points) -&gt; points\n    status[-1,]-&gt;status\n  }\n}\n\n2) Plot the data generated in the previous block\n\nggplot() +\n  geom_segment(aes(x = x1, y = y1, xend = x2, yend = y2),\n               lineend = \"round\",\n               color=\"grey80\", # Set your own Fall color?\n               data=na.omit(points)) +\n  coord_fixed(ratio = 1) +\n  theme_void() # No grid nor axes\n\n\n\n\n\nWrite a critique on a chart in published work\n\n\n(reference: https://www.msn.com/en-us/news/us/5-1-earthquake-reported-in-west-texas-felt-in-parts-of-dallas-fort-worth-area/ar-AA1qGwI2?ocid=socialshare&pc=W099&cvid=ecaf83be12b7423db24a8cc6e7a04c20&ei=11)\nThis NBC Dallas News report covers an earthquake that occurred in Martin County at 7:49 p.m., approximately 21 miles southwest of Ackerly, Texas. The report includes a map to illustrate the geographical impacts of the earthquake using various symbols and colors. However, the map does not effectively convey the information for the following reasons:\n\nLack of Legend or Descriptive Labels: There is no legend or description provided to help readers interpret the map. This is particularly problematic for the two blue lines, which are positioned in the inner and outer areas of the map but are not explained. The map leaves viewers unclear about what these lines represent. Although the data itself is reliable (as it comes from the US Geological Survey, which uses seismic sensors and geophysical tools), the chart’s design fails to communicate this data clearly.\n\nMisleading Representation of Earthquake Effects: While the chart visually depicts the earthquake’s location and potentially affected areas, the use of concentric circles could mislead viewers. It might suggest that the earthquake’s effects are evenly distributed, which is rarely the case. In reality, earthquake intensity decreases significantly as you move farther from the epicenter. A more accurate visualization would use gradients or nuanced shading to reflect this variation in intensity.\n\nDesign Flaws in the Map��s Visual Grammar:\n\nPoor Design: The map could be improved by including a legend that explains what each color and ring represents, such as earthquake intensity or magnitude. The absence of gridlines for latitude and longitude also makes it difficult to determine the exact location of the epicenter and its relation to surrounding areas.\nColor Choices: The current colors, primarily shades of blue and green, may seem intuitive but are not labeled or differentiated clearly. If these circles are meant to represent varying seismic intensities, the color contrast should be sharper, with more distinct shades to represent different levels of severity.\nMinimal Labels: The map lacks key information, such as the earthquake’s magnitude, depth, and exact time. These details are crucial to understanding the event and should be included in the graphic. Additionally, cities or towns within the affected areas should be labeled more prominently to give a clearer sense of the earthquake’s impact on populated regions.\nScale: The map’s scale seems suitable for displaying the regional impacts of the earthquake, but it lacks a scale bar to indicate distances. This makes it difficult to assess how far the seismic effects extended from the epicenter. Including a scale in miles or kilometers would improve viewers�� understanding of the geographical scope of the event.\n\n\nIn summary, while the data is reliable, the design and presentation of the map fail to clearly communicate the earthquake’s impact. Improving the legend, color scheme, labeling, and scale would help make the map more informative and easier to interpret for viewers."
  },
  {
    "objectID": "assignment2.html",
    "href": "assignment2.html",
    "title": "Assignment2",
    "section": "",
    "text": "Run murrell01.R\n\n\n### Paul Murrell's R examples (selected)\n\n## Start plotting from basics \n# Note the order\nplot(pressure, pch=\"+\")  # Can you change pch? A: pch=\"+\"\ntext(150, 600, \n     \"Pressure (mm Hg)\\nversus\\nTemperature (Celsius)\")\n\n\n\n#  Examples of standard high-level plots \n#  In each case, extra output is also added using low-level \n#  plotting functions.\n# \n\n# Setting the parameter (3 rows by 2 cols)\npar(mfrow=c(3, 2))\n\n# Scatterplot\n# Note the incremental additions\n\nx &lt;- c(0.5, 2, 4, 8, 12, 16)\ny1 &lt;- c(1, 1.3, 1.9, 3.4, 3.9, 4.8)\ny2 &lt;- c(4, .8, .5, .45, .4, .3)\n\n# Setting label orientation, margins c(bottom, left, top, right) & text size\npar(las=1, mar=c(4, 4, 2, 4), cex=.7) \nplot.new()\nplot.window(range(x), c(0, 6))\nlines(x, y1)\nlines(x, y2)\npoints(x, y1, pch=16, cex=0.5) # Try different cex value?  cex=0.5\npoints(x, y2, pch=21, bg=\"skyblue\", cex=2)  # Different background color\npar(col=\"gray50\", fg=\"gray50\", col.axis=\"gray50\")\naxis(1, at=seq(0, 16, 4)) # What is the first number standing for? X-axis\naxis(2, at=seq(0, 6, 2))\naxis(4, at=seq(0, 6, 2))\nbox(bty=\"u\")\nmtext(\"Travel Time (s)\", side=1, line=2, cex=0.8)\nmtext(\"Responses per Travel\", side=2, line=2, las=0, cex=0.8)\nmtext(\"Responses per Second\", side=4, line=2, las=0, cex=0.8)\ntext(4, 5, \"Bird 131\")\npar(mar=c(5.1, 4.1, 4.1, 2.1), col=\"black\", fg=\"black\", col.axis=\"black\")\n\n# Histogram\n# Random data\nY &lt;- rnorm(50)\n# Make sure no Y exceed [-3.5, 3.5]\nY[Y &lt; -3.5 | Y &gt; 3.5] &lt;- NA # Selection/set range\nx &lt;- seq(-3.5, 3.5, .1)\ndn &lt;- dnorm(x)\npar(mar=c(4.5, 4.1, 3.1, 0))\nhist(Y, breaks=seq(-3.5, 3.5), ylim=c(0, 0.5), \n     col=\"gray80\", freq=FALSE)\nlines(x, dnorm(x), lwd=2)\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\n# Barplot\npar(mar=c(2, 3.1, 2, 2.1)) \nmidpts &lt;- barplot(VADeaths, \n                  col=gray(0.1 + seq(1, 9, 2)/11), \n                  names=rep(\"\", 4))\nmtext(sub(\" \", \"\\n\", colnames(VADeaths)),\n      at=midpts, side=1, line=0.5, cex=0.5)\ntext(rep(midpts, each=5), apply(VADeaths, 2, cumsum) - VADeaths/2,\n     VADeaths, \n     col=rep(c(\"white\", \"black\"), times=3:2), \n     cex=0.8)\npar(mar=c(5.1, 4.1, 4.1, 2.1))  \n\n# Boxplot\npar(mar=c(3, 4.1, 2, 0))\nboxplot(len ~ dose, data = ToothGrowth,\n        boxwex = 0.25, at = 1:3 - 0.2,\n        subset= supp == \"VC\", col=\"white\",\n        xlab=\"\",\n        ylab=\"tooth length\", ylim=c(0,35))\nmtext(\"Vitamin C dose (mg)\", side=1, line=2.5, cex=0.8)\nboxplot(len ~ dose, data = ToothGrowth, add = TRUE,\n        boxwex = 0.25, at = 1:3 + 0.2,\n        \n        subset= supp == \"OJ\")\nlegend(1.5, 9, c(\"Ascorbic acid\", \"Orange juice\"), \n       fill = c(\"white\", \"gray\"), \n       bty=\"n\")\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\n# Persp\nx &lt;- seq(-10, 10, length= 30)\ny &lt;- x\nf &lt;- function(x,y) { r &lt;- sqrt(x^2+y^2); 10 * sin(r)/r }\nz &lt;- outer(x, y, f)\nz[is.na(z)] &lt;- 1\n# 0.5 to include z axis label\npar(mar=c(0, 0.5, 0, 0), lwd=0.5)\npersp(x, y, z, theta = 30, phi = 30, \n      expand = 0.5)\npar(mar=c(5.1, 4.1, 4.1, 2.1), lwd=1)\n\n# Piechart\npar(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)\npie.sales &lt;- c(0.12, 0.3, 0.26, 0.16, 0.04, 0.12)\nnames(pie.sales) &lt;- c(\"Blueberry\", \"Cherry\",\n                      \"Apple\", \"Boston Cream\", \"Other\", \"Vanilla\")\npie(pie.sales, col = gray(seq(0.3,1.0,length=6))) \n\n\n\n# Exercise: Can you generate these charts individually?  Try these functions \n# using another dataset. Be sure to work on the layout and margins\n\n\n# Creating a data frame for life expectancy data\nlife_expectancy_data &lt;- data.frame(\n  Year = c(2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021),\n  Life_Expectancy_Years = c(80.7, 81.0, 81.0, 81.2, 81.4, 81.8, 81.8, 82.0, 82.5, 82.2, 82.4, 82.5, 82.6, 82.7, 82.2, 82.5),\n  HPI_data = c(44.75, 45.75, 47.47, 44.20, 47.71, 48.60, 48.33, 48.92, 48.73, 47.94, 49.08, 49.66, 50.14, 50.85, 52.72, 51.96)\n)\n\nHPI_data &lt;- structure(list(ISO = c(\"VUT\", \"SWE\", \"SLV\", \"CRI\", \"NIC\", \"DNK\", \n\"ESP\", \"PAN\", \"FRA\", \"CHL\", \"PRT\", \"MDA\", \"HND\", \"NLD\", \"NOR\", \n\"GTM\", \"FIN\", \"ITA\", \"GBR\", \"ROU\", \"PHL\", \"ISR\", \"GRC\", \"SVN\", \n\"HRV\", \"THA\", \"TJK\", \"IRL\", \"DZA\", \"DOM\", \"PER\", \"CZE\", \"ALB\", \n\"BRA\", \"DEU\", \"VNM\", \"AUT\", \"MAR\", \"ECU\", \"JAM\", \"ARG\", \"NZL\", \n\"MEX\", \"UZB\", \"ARM\", \"HUN\", \"COL\", \"CHE\", \"JPN\", \"BTN\", \"CHN\", \n\"MKD\", \"KGZ\", \"TWN\", \"LTU\", \"SVK\", \"LKA\", \"ISL\", \"POL\", \"IDN\", \n\"MUS\", \"URY\", \"BHR\", \"BIH\", \"SEN\", \"AUS\", \"MLT\", \"BGD\", \"MYS\", \n\"LVA\", \"LBY\", \"BEL\", \"BLR\", \"TUN\", \"EST\", \"KOR\", \"BGR\", \"NPL\", \n\"CAN\", \"GEO\", \"CYP\", \"UKR\", \"KHM\", \"MNE\", \"COG\", \"SRB\", \"GAB\", \n\"AZE\", \"ETH\", \"PRY\", \"TUR\", \"PAK\", \"IRQ\", \"CMR\", \"MOZ\", \"GHA\", \n\"JOR\", \"VEN\", \"MRT\", \"CIV\", \"EGY\", \"USA\", \"BOL\", \"MMR\", \"GIN\", \n\"UGA\", \"KEN\", \"NER\", \"SGP\", \"LAO\", \"MDG\", \"KAZ\", \"ZAF\", \"SAU\", \n\"IRN\", \"BEN\", \"BFA\", \"TZA\", \"LBR\", \"RWA\", \"IND\", \"RUS\", \"HTI\", \n\"MWI\", \"YEM\", \"ARE\", \"TGO\", \"HKG\", \"TKM\", \"COD\", \"TTO\", \"LUX\", \n\"SLE\", \"KWT\", \"MLI\", \"NAM\", \"NGA\", \"MNG\", \"ZWE\", \"LBN\", \"ZMB\", \n\"QAT\", \"TCD\", \"AFG\", \"LSO\", \"BWA\", \"CAF\"), LifeExp = c(70.4, \n83, 70.7, 77, 73.8, 81.4, 83, 76.2, 82.5, 78.9, 81, 68.8, 70.1, \n81.7, 83.2, 69.2, 82, 82.9, 80.7, 74.2, 69.3, 82.3, 80.1, 80.7, \n77.6, 78.7, 71.6, 82, 76.4, 72.6, 72.4, 77.7, 76.5, 72.8, 80.6, \n73.6, 81.6, 74, 73.7, 70.5, 75.4, 82.5, 70.2, 70.9, 72, 74.5, \n72.8, 84, 84.8, 71.8, 78.2, 73.8, 70, 81, 73.7, 74.9, 76.4, 82.7, \n76.5, 67.6, 73.6, 75.4, 78.8, 75.3, 67.1, 84.5, 83.8, 72.4, 74.9, \n73.6, 71.9, 81.9, 72.4, 73.8, 77.1, 83.7, 71.8, 68.5, 82.7, 71.7, \n81.2, 71.6, 69.6, 76.3, 63.5, 74.2, 65.8, 69.4, 65, 70.3, 76, \n66.1, 70.4, 60.3, 59.3, 63.8, 74.3, 70.6, 64.4, 58.6, 70.2, 77.2, \n63.6, 65.7, 58.9, 62.7, 61.4, 61.6, 82.8, 68.1, 64.5, 69.4, 62.3, \n76.9, 73.9, 59.8, 59.3, 66.2, 60.7, 66.1, 67.2, 69.4, 63.2, 62.9, \n63.8, 78.7, 61.6, 85.5, 69.3, 59.2, 73, 82.6, 60.1, 78.7, 58.9, \n59.3, 52.7, 71, 59.3, 75, 61.2, 79.3, 52.5, 62, 53.1, 61.1, 53.9\n), Wellbeing = c(7.12, 7.44, 6.43, 6.41, 6.1, 7.7, 6.47, 6.55, \n6.66, 6.44, 6.18, 5.96, 6.11, 7.31, 7.36, 6.3, 7.79, 6.47, 6.87, \n6.55, 5.97, 7.58, 6.1, 6.76, 6.29, 5.64, 5.29, 6.83, 5.22, 6.03, \n5.69, 6.94, 5.26, 6.01, 6.75, 5.54, 7.08, 5.33, 5.43, 5.81, 5.91, \n7.14, 5.99, 6.19, 5.3, 6.23, 5.29, 7.33, 6.09, 5.2, 5.86, 5.53, \n5.56, 6.25, 6.86, 6.42, 4.1, 7.56, 5.98, 5.43, 5.95, 6.5, 6.5, \n5.75, 4.9, 7.11, 6.44, 4.12, 6.01, 6.35, 5.5, 6.88, 5.6, 4.5, \n6.55, 6.11, 5.42, 4.62, 6.94, 4.91, 6.27, 5.31, 4.56, 5.39, 4.92, \n6.25, 5.08, 5.2, 4.1, 5.58, 4.37, 4.49, 5.09, 4.96, 5.18, 4.38, \n3.91, 5.11, 4.5, 5.06, 4.03, 6.96, 5.57, 4.31, 4.94, 4.22, 4.46, \n4.37, 6.59, 4.93, 3.89, 6.26, 5.6, 6.45, 4.79, 4.49, 4.64, 3.68, \n4.05, 3.4, 3.56, 5.45, 3.81, 3.64, 3.64, 6.73, 4.04, 5.32, 5.45, \n3.8, 6.2, 7.06, 3.71, 6.17, 4.11, 4.49, 4.48, 5.72, 3.15, 2.18, \n3.08, 6.5, 4.4, 2.44, 3.7, 3.5, 3.1), tCO2e = c(2.62, 8.7, 2.03, \n4.37, 2.61, 10.04, 7.12, 5.24, 7.91, 6.2, 6.36, 1.29, 2.19, 10.11, \n11.02, 2.47, 12.19, 8.49, 8.94, 5.42, 2.08, 12.25, 6.89, 9.26, \n6.58, 5.05, 1.48, 10.21, 3.11, 4.13, 3.19, 9.23, 3.67, 4.59, \n10.44, 3.79, 12.15, 3.38, 3.82, 3.78, 6.39, 13.91, 4.69, 5.69, \n3.43, 7.46, 3.74, 15.7, 11.66, 3.29, 8.38, 5.49, 4.09, 11.43, \n10.27, 9.34, 2.18, 17.82, 8.89, 3.19, 7.65, 10.51, 12.14, 7.85, \n1.47, 17.7, 14.82, 1.22, 8.97, 9.58, 5.89, 15.84, 6.59, 3.33, \n12.59, 14.39, 6.34, 2.09, 17.87, 4.59, 14.96, 6.45, 2.8, 9.59, \n1.84, 12.28, 3.87, 6.1, 0.2, 8.27, 6.27, 2.23, 6.79, 1.3, 1.6, \n1.13, 4.11, 7.37, 2.08, 1.23, 3.14, 19.59, 5.88, 2.46, 1.7, 1.08, \n1.36, 1.11, 23.24, 6.98, 1.08, 14.22, 7.08, 20.16, 10.5, 1.55, \n1.87, 1.61, 0.48, 0.7, 2.1, 12.09, 1.33, 0.69, 1.38, 26.78, 2.16, \n23.5, 14.23, 0.57, 21.81, 34.91, 0.89, 28.84, 3.76, 6.22, 1.55, \n24.67, 0.82, 4.91, 2.23, 42.2, 3.88, 1.14, 3.04, 10.28, 1.83), \n    Continent = c(8L, 3L, 1L, 1L, 1L, 3L, 3L, 1L, 3L, 1L, 3L, \n    7L, 1L, 3L, 3L, 1L, 3L, 3L, 3L, 7L, 8L, 4L, 3L, 7L, 7L, 8L, \n    7L, 3L, 4L, 1L, 1L, 7L, 7L, 1L, 3L, 8L, 3L, 4L, 1L, 1L, 1L, \n    2L, 1L, 7L, 7L, 7L, 1L, 3L, 8L, 6L, 8L, 7L, 7L, 8L, 7L, 7L, \n    6L, 3L, 7L, 8L, 5L, 1L, 4L, 7L, 5L, 2L, 3L, 6L, 8L, 7L, 4L, \n    3L, 7L, 4L, 7L, 8L, 7L, 6L, 2L, 7L, 3L, 7L, 8L, 7L, 5L, 7L, \n    5L, 7L, 5L, 1L, 4L, 6L, 4L, 5L, 5L, 5L, 4L, 1L, 5L, 5L, 4L, \n    2L, 1L, 8L, 5L, 5L, 5L, 5L, 8L, 8L, 5L, 7L, 5L, 4L, 4L, 5L, \n    5L, 5L, 5L, 5L, 6L, 7L, 1L, 5L, 4L, 4L, 5L, 8L, 7L, 5L, 1L, \n    3L, 5L, 4L, 5L, 5L, 5L, 8L, 5L, 4L, 5L, 4L, 5L, 6L, 5L, 5L, \n    5L)), class = \"data.frame\", row.names = c(NA, -147L))\nHPI_data$Continent&lt;-as.factor(HPI_data$Continent)\n\n# Display the data frame\npar(mar = c(5, 5, 4, 2))   # Set the canvas for a plot with the specified margin.\nplot.new()\nplot.window(range(life_expectancy_data$Year), c(min(life_expectancy_data$Life_Expectancy_Years), max(life_expectancy_data$Life_Expectancy_Years)))\nlines(life_expectancy_data$Year, life_expectancy_data$Life_Expectancy_Years,type=\"l\")\naxis(1, at=seq(min(life_expectancy_data$Year),max(life_expectancy_data$Year),1))\naxis(2, at=seq(min(life_expectancy_data$Life_Expectancy_Years),max(life_expectancy_data$Life_Expectancy_Years),1))\ntitle(\"Line Plot: Life Expectancy for each year\")\n\n\n\n# Plot 2\npar(mar = c(5, 5, 4, 2))   # Set the canvas for a plot with the specified margin.\nplot.new()\nplot.window(c(min(life_expectancy_data$HPI_data),max(life_expectancy_data$HPI_data)), c(min(life_expectancy_data$Life_Expectancy_Years), max(life_expectancy_data$Life_Expectancy_Years)))\npoints(life_expectancy_data$HPI_data, life_expectancy_data$Life_Expectancy_Years)\nabline(v=mean(life_expectancy_data$HPI_data),h=mean(life_expectancy_data$Life_Expectancy_Years),lty=3,col=\"grey\")\naxis(1, at=seq(min(life_expectancy_data$HPI_data),max(life_expectancy_data$HPI_data),1))\naxis(2, at=seq(min(life_expectancy_data$Life_Expectancy_Years),max(life_expectancy_data$Life_Expectancy_Years),1))\nmtext(\"HPI\", side=1, line=2, cex=0.8)\nmtext(\"Life Expectancy\", side=2, line=2, las=0, cex=0.8)\nbox(bty=\"u\")\ntext(mean(life_expectancy_data$HPI_data)*1.025, mean(life_expectancy_data$Life_Expectancy_Years), \"Means of two vars.\")\npoints(mean(life_expectancy_data$HPI_data), mean(life_expectancy_data$Life_Expectancy_Years), pch=19,cex=1)\ntitle(\"Point Plot: Life Expectancy vs HPI\")\n\n\n\n# Plot 3 \nhist(HPI_data$tCO2e)\n\n\n\n# Plot 4\nboxplot(HPI_data$Wellbeing~HPI_data$Continent)\n\n\n\n# Plot 5\n# Persp\n# 0.5 to include z axis label\n\n# Scale the sorted LifeExp and Wellbeing values\nsorted_data &lt;- HPI_data[order(HPI_data$Wellbeing), ]\nx &lt;- order(scale(sorted_data$Wellbeing)[1:30])\ny &lt;- x\n\n# Create z values (you can use any variable here)\nf &lt;- function(x,y) { r &lt;- sqrt(x^2+y^2); 10 * sin(r)/r }\nz &lt;- outer(x, y, f)\n\npar(mar=c(0, 0.5, 0, 0), lwd=0.5)\npersp(x, y, z, theta = 30, phi = 30, \n      expand = 0.5)\n\n\n\npar(mar=c(5.1, 4.1, 4.1, 2.1), lwd=1)\n\n# Plot 6\n\n# Piechart\n# Aggregate CO2 emissions by continent\ncont_co2 &lt;- aggregate(x = HPI_data$tCO2e, by = list(HPI_data$Continent), FUN = sum)[, 2]\n# Names for each continent\ncontinent_names &lt;- c(\"Latin America\", \"N. America & Oceania\", \"Western Europe\", \"Middle East\", \"Africa\", \"South Asia\", \"Eastern Europe & Central Asia\", \"East Asia\")\n\n# Calculate percentage of each value\npercentages &lt;- round(cont_co2 / sum(cont_co2) * 100, 2)\n\n# Combine names with percentages\nlabels &lt;- paste(continent_names, \"-\", percentages, \"%\", sep=\"\")\n\n# Sort cont_co2 and labels in decreasing order\norder_decreasing &lt;- order(cont_co2, decreasing = TRUE)\ncont_co2_sorted &lt;- cont_co2[order_decreasing]\nlabels_sorted &lt;- labels[order_decreasing]\ncontinent_names_sorted &lt;-continent_names[order_decreasing]\nnames(cont_co2_sorted)&lt;-continent_names_sorted\n# Create the pie chart\npar(mar = c(0, 2, 1, 2), xpd = FALSE, cex = 0.7)\npie(cont_co2_sorted, col = gray(seq(0.3, 1.0, length = 8))) \n\n# Add the legend\nlegend(\"topright\", legend = labels_sorted, fill = gray(seq(0.3, 1.0, length = 8)), cex = 0.8)"
  },
  {
    "objectID": "assignment3.html",
    "href": "assignment3.html",
    "title": "Assignment3",
    "section": "",
    "text": "Choose one of the six charts and explain how it is configured by adding documentation to the codes.\n\n\n# Random data\nY &lt;- rnorm(50)\n# Make sure no Y exceed [-3.5, 3.5]\nY[Y &lt; -3.5 | Y &gt; 3.5] &lt;- NA # Selection/set range\nx &lt;- seq(-3.5, 3.5, .1)\ndn &lt;- dnorm(x)\npar(mar=c(4.5, 4.1, 3.1, 0))\nhist(Y, breaks=seq(-3.5, 3.5), ylim=c(0, 0.5), col=\"gray80\", freq=FALSE)\nlines(x, dnorm(x), lwd=2)\n\n\n\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\nThis code is to draw histogram with randomly generated values.\n(1) Generate random data based on normal distribution (mu=1, sd = 0)\nY &lt;- rnorm(50)\n(2) Filter data which make sure values between -3.5 and +3.5\nY[Y &lt; -3.5 | Y &gt; 3.5] &lt;- NA # Selection/set range\n(3) Generate squential values with 0.1 interval with minimum -3.5 and maximum 3.5\nx &lt;- seq(-3.5, 3.5, .1)\n(4) [irrelevent to histogram] Get probability of squential values on normal distribution.\ndn &lt;- dnorm(x)\n(5) Set margins for plot area in order of c(bottom, left, top, right)\npar(mar=c(4.5, 4.1, 3.1, 0))\n(6) Draw histogram of Y\n\nSet breaks between -3.5 and 3.5 for x-axis ticks\nSet the range of Y values (-3.5 ~ 3.5) to display using ylim\nSet color for the plot as 80% black for gray\nShow probability instead of frequency by setting freq as FALSE\n\nhist(Y, breaks=seq(-3.5, 3.5), ylim=c(0, 0.5), col=“gray80”, freq=FALSE)\n(7) Draw normal distribuiton guideline to see if data Y follows normal distribution.\nlines(x, dnorm(x), lwd=2)\n(8) Set plot margin again.\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n2.1. Compare the regression models\n\n# Create four model objects\ndata(anscombe)  # Load Anscombe's data\nlm1 &lt;- lm(y1 ~ x1, data=anscombe)\nsummary(lm1)\n\n\nCall:\nlm(formula = y1 ~ x1, data = anscombe)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.92127 -0.45577 -0.04136  0.70941  1.83882 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0001     1.1247   2.667  0.02573 * \nx1            0.5001     0.1179   4.241  0.00217 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6665,    Adjusted R-squared:  0.6295 \nF-statistic: 17.99 on 1 and 9 DF,  p-value: 0.00217\n\nlm2 &lt;- lm(y2 ~ x2, data=anscombe)\nsummary(lm2)\n\n\nCall:\nlm(formula = y2 ~ x2, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.9009 -0.7609  0.1291  0.9491  1.2691 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)    3.001      1.125   2.667  0.02576 * \nx2             0.500      0.118   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6662,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002179\n\nlm3 &lt;- lm(y3 ~ x3, data=anscombe)\nsummary(lm3)\n\n\nCall:\nlm(formula = y3 ~ x3, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.1586 -0.6146 -0.2303  0.1540  3.2411 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0025     1.1245   2.670  0.02562 * \nx3            0.4997     0.1179   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6663,    Adjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002176\n\nlm4 &lt;- lm(y4 ~ x4, data=anscombe)\nsummary(lm4)\n\n\nCall:\nlm(formula = y4 ~ x4, data = anscombe)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-1.751 -0.831  0.000  0.809  1.839 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)   \n(Intercept)   3.0017     1.1239   2.671  0.02559 * \nx4            0.4999     0.1178   4.243  0.00216 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6667,    Adjusted R-squared:  0.6297 \nF-statistic:    18 on 1 and 9 DF,  p-value: 0.002165\n\n\n2.2. Compare different ways to create the plots (e.g. changing colors, line types, plot characters)\n\npar(mfrow=c(2, 2),mar=c(4.5, 4.1, 3.1, 0.3))\nplot(anscombe$x1,anscombe$y1,col=\"blue\")\nabline(coefficients(lm1))\nplot(anscombe$x2,anscombe$y2)\nabline(coefficients(lm2),lty=3)\nplot(anscombe$x3,anscombe$y3)\nabline(coefficients(lm3),col=\"red\")\nplot(anscombe$x4,anscombe$y4,xlab=\"fourth X\",ylab=\"fourth Y\")\nabline(coefficients(lm4))\n\n\n\n\nTo make plots to compare them effectively, we can adjust plot elements.\n1) Change Color for data : It helps identify which data should be focused.\n2) Change guide line symbol: To highlight the distribution of data, change guideline symbol\n3) Chang guide line color: To highlight the trend line of data, change guideline color\n3.Can you finetune the charts without using other packages (consult RGraphics by Murrell)?\n\nUse a serif font\nTry non-default colors\nUse own plotting character\n\n\n# Custom boxplot with fine-tuned aesthetics\n\n# Set graphical parameters for font and layout\npar(family = \"serif\", mar=c(5, 5, 5, 0))\n\n# Define custom colors\ncolors_vc &lt;- \"lightblue\"  # Vitamin C - Ascorbic Acid\ncolors_oj &lt;- \"lightgreen\" # Orange Juice\n\n# Create boxplot for 'VC' (Vitamin C Ascorbic Acid group)\nboxplot(len ~ dose, data = ToothGrowth,\n        boxwex = 0.25, at = 1:3 - 0.2,\n        subset= supp == \"VC\", col=colors_vc, # Use custom color\n        xlab=\"\",\n        ylab=\"Tooth Length\", ylim=c(0,35),\n        pch=17) # Custom plotting character (triangle)\n\n# Add x-axis label\nmtext(\"Vitamin C Dose (mg)\", side=1, line=2.5, cex=0.8)\n\n# Overlay boxplot for 'OJ' (Orange Juice group)\nboxplot(len ~ dose, data = ToothGrowth, add = TRUE,\n        boxwex = 0.25, at = 1:3 + 0.2,\n        subset= supp == \"OJ\", col=colors_oj, # Use custom color\n        pch=19) # Custom plotting character (circle)\n\n# Add a legend with the custom colors\nlegend(1.5, 9, c(\"Ascorbic Acid\", \"Orange Juice\"), \n       fill = c(colors_vc, colors_oj), \n       bty=\"n\")\n\n\n\n# Reset graphical parameters\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\n\nHow about with ggplot2? (use tidyverse package)\n\n\n# Load the necessary package\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n# Custom colors for the boxplot\ncustom_colors &lt;- c(\"lightblue\", \"lightgreen\")\n\n# Create the customized boxplot\nggplot(ToothGrowth, aes(x = factor(dose), y = len, fill = supp)) +\n  \n  # Boxplot with custom fill colors and adjusted dodge width\n  geom_boxplot(position = position_dodge(0.8), width = 0.5) +\n  \n  # Add jittered points with custom shape\n  geom_jitter(position = position_dodge(0.8), shape = 17, size = 2, color = \"black\") +\n  \n  # Set axis labels\n  labs(x = \"Vitamin C Dose (mg)\", y = \"Tooth Length\") +\n  \n  # Custom fill colors for the two groups\n  scale_fill_manual(values = custom_colors, labels = c(\"Ascorbic Acid\", \"Orange Juice\")) +\n  \n  # Add a theme with a serif font\n  theme_minimal(base_family = \"serif\") +\n  \n  # Adjust the legend\n  theme(legend.title = element_blank(),\n        legend.position = \"top\")"
  },
  {
    "objectID": "assignment4.html",
    "href": "assignment4.html",
    "title": "Assignment 4",
    "section": "",
    "text": "# Team GeoVIS\n# Members : Changho Lee, Americo Gamarra, Brennan Stout, Umme Kulsum - Coordinator\n\n# Team GeoVIS\n# Members : Changho Lee, Americo Gamarra, Brennan Stout, Umme Kulsum - Coordinator\n\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\ndata &lt;- mpg\nfont &lt;- \"serif\"\n\ndata$model&lt;-paste0(toupper(substr(data$model, 1, 1)), substr(data$model, 2, nchar(data$model)))\ndata$manufacturer&lt;-paste0(toupper(substr(data$manufacturer, 1, 1)), substr(data$manufacturer, 2, nchar(data$manufacturer)))\n## 1st Graph\nlibrary(dplyr)\nlibrary(RColorBrewer)\nuniq &lt;- count(unique(data,vars = c(manufacturer, cty)),vars=manufacturer)\nqual_colors &lt;- colorRampPalette(brewer.pal(9, \"PuRd\"))(20)\nnewdata &lt;- data[ which(data$manufacturer=='ford'), ]\ntotal &lt;- sum(uniq$n)\nwidths &lt;- c()\nfor (m in 1:length(uniq$vars)){\nwidths &lt;- append(widths, (uniq$n[m]/total)*100)\n}\nheights = uniq$n\npar( mar= c(4,4,1,1),family=font )\np &lt;- barplot(heights, widths, space=0, \n           col = qual_colors, xlab = \"Percent of cars\", ylab = \"Number of models\")\ntext(x = p, y = heights/2, labels = uniq$vars, cex=ifelse(uniq$vars%in%c(\"Land rover\",\"Lincoln\",\"Mercury\",\"Pontiac\"),0.5,1), srt=90)\naxis(1, seq(0,100,5))\npolygon(c(42,42,72,72), c(25, 30, 30, 25), col=\"snow\")\ntext(57, 28, \"Percent of market\\nby manufacturer\", cex=1)\n\n\n\n## 2nd Graph\n# Get the 6 largest manufacturers by count\ntop_makers &lt;- mpg %&gt;%\ncount(manufacturer) %&gt;%\ntop_n(6, n) %&gt;%\npull(manufacturer)\n\n# Filter the data to include only the top 6 manufacturers\nmpg_filtered &lt;- mpg %&gt;%\nfilter(manufacturer %in% top_makers)\n\n# Create the faceted histograms for city mpg\nggplot(mpg_filtered, aes(x = cty)) +\ngeom_histogram(binwidth = 2, fill = \"violetred2\", color = \"white\") +\nfacet_grid(class ~ manufacturer) +  # Facet by class and cylinders\nlabs(x = \"City MPG\", y = \"Count\", title = \"City MPG Distribution by Manufacturer, Class, and Cylinder\", family=font) +\ntheme_minimal() +\ntheme(\n  strip.text = element_text(size = 10,family=font),    # Adjust facet label size\n  panel.spacing = unit(1, \"lines\"),        # Add spacing between facets\n  axis.text.x = element_text(size = 8,family=font),    # Adjust size of x-axis text\n  axis.text.y = element_text(size = 8, family=font),     # Adjust size of y-axis text\n  axis.title.x = element_text(size = 12, family = font),  # Set x-axis label font and size\n  axis.title.y = element_text(size = 12, , family = font),  # Set y-axis label font and size\n  plot.title = element_text(size = 14, family = font, hjust = 0.5),\n  panel.grid = element_blank(),\n  panel.border = element_rect(color = \"gray40\", fill = NA, size = 0.6)\n)\n\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n\n\n\n\n## 3rd Graph \nmh &lt;- aggregate(hwy ~ class, data = data, mean)\nmc &lt;- aggregate(cty ~ class, data = data, mean)\n\npar(mfrow = c(1, 2), mar = c(5,6,2,2), mgp = c(4, 1, 0.8), family = font, cex.main = 1.2, \n  cex.lab = 1, font.main = 1, \n  font.lab = 1, font.axis = 1, cex.axis = 0.7)\n\n# mean highway MPG\nbarplot(mh$hwy, names.arg = mh$class,\n      horiz = TRUE, col = \"violetred2\", border = \"black\",\n      xlab = \"Mean MPG\", ylab = \"Type of Vehicle\",\n      xlim = c(0, 35),\n      main = \"Highway\", las = 1)\nabline(v = 0, lwd = 4, col = \"black\") \n\n# mean city MPG\nbarplot(mc$cty, names.arg = mc$class, \n      horiz = TRUE, col = \"white\", border = \"black\", \n      xlab = \"Mean MPG\", ylab = \"\", \n      xlim = c(0, 35),\n      main = \"City\", las = 1)\nabline(v = 0, lwd = 4, col = \"black\") \n\n\n\n## 4th Graph\ndata_sum &lt;- mpg %&gt;%\ngroup_by(class) %&gt;%\nsummarise(mh = mean(hwy), mc = mean(cty))\n\nggplot(data_sum, aes(x = class)) +\ngeom_col(aes(y = mh), fill = \"violetred2\", width = 0.4, \n         position = position_nudge(x = 0.1)) +\ngeom_col(aes(y = mc), fill = 'white', color = \"black\", \n         width = 0.4, position = position_nudge(x = -0.1)) +\nlabs(x = \"Type of Vehicle\", y = \"Mean Miles per Gallon\", title = \"Mean MPG by Class and Vehicle Type\") +\ntheme_minimal() +\ntheme(panel.grid = element_blank(),axis.line = element_line(color = \"black\"), \n      axis.text.x = element_text(angle = 45, hjust = 1, family = font), \n      axis.text.y = element_text(family = font),\n      axis.title.x = element_text(family = font, size = 12), \n      axis.title.y = element_text(family = font, size = 12), \n      plot.title = element_text(family = font, \n                                size = 14, hjust = 0.5))"
  },
  {
    "objectID": "assignment5.html",
    "href": "assignment5.html",
    "title": "Assignment5",
    "section": "",
    "text": "Using sample datasets or own data, create the following charts using only R graphics functions (i.e. without using any other packages). Be sure you customize the chart with your own style/theme (e.g. font, color, pch, etc.)\n\n\n\nHistogram\n\n\nlibrary(ggplot2)\n\ndata&lt;-mpg\n\n## a. Histogram.\nhist(mpg$hwy, \n     main=\"Histogram of Highway MPG\", \n     col=\"lightblue\", \n     border=\"darkblue\", \n     xlab=\"Highway MPG\", \n     ylab=\"Frequency\", \n     font.main=2, font.lab=4)\n\n\n\n\n\nBarchart\nVertical\n\n\nbarplot(table(mpg$class), \n        main=\"Bar Chart of Car Classes\", \n        col=\"coral\", \n        xlab=\"Car Class\", \n        ylab=\"Frequency\", \n        font.main=2)\n\n\n\n\n\nHorizontal\n\n\nbarplot(table(mpg$class), \n        main=\"Horizontal Bar Chart of Car Classes\", \n        col=\"lightgreen\", \n        horiz=TRUE, \n        xlab=\"Frequency\", \n        ylab=\"Car Class\", \n        font.main=2)\n\n\n\n\n\nPiechart\n\n\npie(table(mpg$class), \n    main=\"Pie Chart of Car Classes\", \n    col=rainbow(length(unique(mpg$class))), \n    font.main=2)\n\n\n\n\n\nBoxplot\n\n\nboxplot(hwy ~ class, data=mpg, \n        main=\"Boxplot of Highway MPG by Car Class\", \n        col=c(\"skyblue\", \"pink\", \"lightgreen\"), \n        xlab=\"Car Class\", \n        ylab=\"Highway MPG\", \n        border=\"darkred\", \n        font.main=2)\n\n\n\n\n\nScatterplot\n\n\nplot(mpg$displ, mpg$hwy, \n     main=\"Scatterplot of Displacement vs Highway MPG\", \n     xlab=\"Displacement (liters)\", \n     ylab=\"Highway MPG\", \n     col=\"blue\", \n     pch=16, \n     font.main=2, font.lab=4)\n\n\n\n\n\nRepeat 1 using ggplot2, with your own style\n\n\n\nHistogram\n\n\nggplot(mpg, aes(x=hwy)) +\n  geom_histogram(binwidth=1, fill=\"lightblue\", color=\"darkblue\") +\n  ggtitle(\"Histogram of Highway MPG\") +\n  theme_minimal() +\n  theme(plot.title = element_text(face=\"bold\"))\n\n\n\n\n\nBar Chart\nVertical\n\n\nggplot(mpg, aes(x=class)) +\n  geom_bar(fill=\"coral\") +\n  ggtitle(\"Bar Chart of Car Classes\") +\n  theme_minimal() +\n  theme(plot.title = element_text(face=\"bold\"))\n\n\n\n\n\nHorizontal\n\n\nggplot(mpg, aes(x=class)) +\n  geom_bar(fill=\"lightgreen\") +\n  coord_flip() +\n  ggtitle(\"Horizontal Bar Chart of Car Classes\") +\n  theme_minimal() +\n  theme(plot.title = element_text(face=\"bold\"))\n\n\n\n\n\nPie Chart\n\n\nggplot(mpg, aes(x=\"\", fill=class)) +\n  geom_bar(width=1) +\n  coord_polar(theta=\"y\") +\n  ggtitle(\"Pie Chart of Car Classes\") +\n  theme_void() +\n  theme(plot.title = element_text(face=\"bold\"))\n\n\n\n\n\nBoxplot\n\n\nggplot(mpg, aes(x=class, y=hwy, fill=class)) +\n  geom_boxplot(color=\"darkred\") +\n  ggtitle(\"Boxplot of Highway MPG by Car Class\") +\n  theme_minimal() +\n  theme(plot.title = element_text(face=\"bold\")) +\n  scale_fill_manual(values=c(\"skyblue\", \"pink\", \"lightgreen\", \"yellow\", \"purple\", \"orange\", \"red\"))\n\n\n\n\n\nScatterplot\n\n\nggplot(mpg, aes(x=displ, y=hwy)) +\n  geom_point(color=\"blue\", size=3) +\n  ggtitle(\"Scatterplot of Displacement vs Highway MPG\") +\n  theme_minimal() +\n  theme(plot.title = element_text(face=\"bold\"))\n\n\n\n\n\nExport the charts using different formats such as:\n\n\n# a. pdf\n#ggsave(\"scatterplot.pdf\", width=5, height=4)\n\n# b. jpg\n#ggsave(\"scatterplot.jpg\", width=5, height=4)\n\n# c. svg\n#ggsave(\"scatterplot.svg\", width=5, height=4)\n\n# d. tiff\n#ggsave(\"scatterplot.tiff\", width=5, height=4)\n\n# e. bmp\n#ggsave(\"scatterplot.bmp\", width=5, height=4)"
  },
  {
    "objectID": "prev_assignment1.html",
    "href": "prev_assignment1.html",
    "title": "Assignment1",
    "section": "",
    "text": "Co-work: Sunmin Hong\n1. Start drafting a research project framework:\na. Identify a topic of interest\nOur topic is identifying the characteristics of criminals who engage in phishing crimes in South Korea. Specifically, they will be divided into several groups based on their sociodemographic characteristics and crime participation path as variables. After that, a risk group with the highest distribution of all variables will be selected, and crime risk factors based on their characteristics will be displayed.\nb. Write up the research question\n\nUnsupervised Learning 1: What socio-economic variable are classified based on the characteristics of fishing criminals?\nUnsupervised learning 2: What is the distribution of the difference in the influence of variables that contribute to dividing the characteristics of criminals?\nSupervised Learning 1: What is the statistical relationship of the most influential. variable with other variables? (regression)\nSupervised Learning 2: How to create a model for predicting variables with great influence?\n\nc. Do you have a dependent variable?\nWe will find the most influential variable through unsupervised learning and use that. variable as a dependent variable to find the most suitable model through supervised. learning.\nd. What is the hypothes is?\nAfter analyzing existing studies on criminals who engage in cybercrime, especially. phishing, we will create hypotheses related to the characteristics of criminals who engage in phishing.\n2. Six steps in research:\na. Topic identification/Motivation\nAs a result of collecting data on demographic characteristics and crime participation. paths of criminals who participated in phishing crimes in South Korea, the information to be set as variables could be classified into their participation path, gender, age, criminal record, occupation, and education. After creating several groups that engage in phishing crimes based on this information, we will reveal what characteristics the most dangerous groups have.\nb. Systematic Literature Review/Meta Analysis\nIn progress\nc. Model of Interest: Data-based, Algorithm-based or Hybrid\nWe will use a data-driven model using information about the characteristics of criminals involved in phishing crimes.\nd. Data Collection and Management\nWe have already obtained data containing information about the characteristics of criminals involved in phishing crimes, and after processing the missing data, we will proceed with the aforementioned procedure.\ne. Writing tool (e.g. LaTeX, Markdown/quarto, overleaf, MathJax)\nWe will use programs such as LaTex or Overleaf that show publication-level quality to reveal the characteristics of the phishing offender.\nf. Findings interpreted (e.g. models, data visualization)\nWe will use the visualization method that best represents the results for different groups , including the most risky group mentioned above."
  },
  {
    "objectID": "geovis.html",
    "href": "geovis.html",
    "title": "Final Project Deliverable",
    "section": "",
    "text": "final project report: View"
  },
  {
    "objectID": "assignment6.html",
    "href": "assignment6.html",
    "title": "Assignment6",
    "section": "",
    "text": "Assignment 6 - b\n\n\nThe Shiny app from this link is embedded below:\n\n\n\n\nAssignment 6 - d\n\n\nThe Shiny app from this link is embedded below:"
  },
  {
    "objectID": "assignment6_.html",
    "href": "assignment6_.html",
    "title": "Assignment6",
    "section": "",
    "text": "Assignment 6 - b\n\n\nThe Shiny app from this link is embedded below:\n\n\n\n\nAssignment 6 - d\n\n\nThe Shiny app from this link is embedded below:"
  },
  {
    "objectID": "assignment7.html",
    "href": "assignment7.html",
    "title": "Assignment7",
    "section": "",
    "text": "Assignment 7\n\n\nThe Shiny app for assignment 7 from this link is embedded below:"
  },
  {
    "objectID": "assignment8.html",
    "href": "assignment8.html",
    "title": "Assignment8",
    "section": "",
    "text": "Dashboard: this link is embedded below:"
  },
  {
    "objectID": "geovis.html#final-project-presentation",
    "href": "geovis.html#final-project-presentation",
    "title": "Final Project Deliverable",
    "section": "Final Project Presentation",
    "text": "Final Project Presentation"
  }
]