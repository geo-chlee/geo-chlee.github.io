---
title: "Assignment2"
---

1.  Run murrell01.R

```{r}
### Paul Murrell's R examples (selected)

## Start plotting from basics 
# Note the order
plot(pressure, pch="+")  # Can you change pch? A: pch="+"
text(150, 600, 
     "Pressure (mm Hg)\nversus\nTemperature (Celsius)")

#  Examples of standard high-level plots 
#  In each case, extra output is also added using low-level 
#  plotting functions.
# 

# Setting the parameter (3 rows by 2 cols)
par(mfrow=c(3, 2))

# Scatterplot
# Note the incremental additions

x <- c(0.5, 2, 4, 8, 12, 16)
y1 <- c(1, 1.3, 1.9, 3.4, 3.9, 4.8)
y2 <- c(4, .8, .5, .45, .4, .3)

# Setting label orientation, margins c(bottom, left, top, right) & text size
par(las=1, mar=c(4, 4, 2, 4), cex=.7) 
plot.new()
plot.window(range(x), c(0, 6))
lines(x, y1)
lines(x, y2)
points(x, y1, pch=16, cex=0.5) # Try different cex value?  cex=0.5
points(x, y2, pch=21, bg="skyblue", cex=2)  # Different background color
par(col="gray50", fg="gray50", col.axis="gray50")
axis(1, at=seq(0, 16, 4)) # What is the first number standing for? X-axis
axis(2, at=seq(0, 6, 2))
axis(4, at=seq(0, 6, 2))
box(bty="u")
mtext("Travel Time (s)", side=1, line=2, cex=0.8)
mtext("Responses per Travel", side=2, line=2, las=0, cex=0.8)
mtext("Responses per Second", side=4, line=2, las=0, cex=0.8)
text(4, 5, "Bird 131")
par(mar=c(5.1, 4.1, 4.1, 2.1), col="black", fg="black", col.axis="black")

# Histogram
# Random data
Y <- rnorm(50)
# Make sure no Y exceed [-3.5, 3.5]
Y[Y < -3.5 | Y > 3.5] <- NA # Selection/set range
x <- seq(-3.5, 3.5, .1)
dn <- dnorm(x)
par(mar=c(4.5, 4.1, 3.1, 0))
hist(Y, breaks=seq(-3.5, 3.5), ylim=c(0, 0.5), 
     col="gray80", freq=FALSE)
lines(x, dnorm(x), lwd=2)
par(mar=c(5.1, 4.1, 4.1, 2.1))

# Barplot
par(mar=c(2, 3.1, 2, 2.1)) 
midpts <- barplot(VADeaths, 
                  col=gray(0.1 + seq(1, 9, 2)/11), 
                  names=rep("", 4))
mtext(sub(" ", "\n", colnames(VADeaths)),
      at=midpts, side=1, line=0.5, cex=0.5)
text(rep(midpts, each=5), apply(VADeaths, 2, cumsum) - VADeaths/2,
     VADeaths, 
     col=rep(c("white", "black"), times=3:2), 
     cex=0.8)
par(mar=c(5.1, 4.1, 4.1, 2.1))  

# Boxplot
par(mar=c(3, 4.1, 2, 0))
boxplot(len ~ dose, data = ToothGrowth,
        boxwex = 0.25, at = 1:3 - 0.2,
        subset= supp == "VC", col="white",
        xlab="",
        ylab="tooth length", ylim=c(0,35))
mtext("Vitamin C dose (mg)", side=1, line=2.5, cex=0.8)
boxplot(len ~ dose, data = ToothGrowth, add = TRUE,
        boxwex = 0.25, at = 1:3 + 0.2,
        
        subset= supp == "OJ")
legend(1.5, 9, c("Ascorbic acid", "Orange juice"), 
       fill = c("white", "gray"), 
       bty="n")
par(mar=c(5.1, 4.1, 4.1, 2.1))

# Persp
x <- seq(-10, 10, length= 30)
y <- x
f <- function(x,y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }
z <- outer(x, y, f)
z[is.na(z)] <- 1
# 0.5 to include z axis label
par(mar=c(0, 0.5, 0, 0), lwd=0.5)
persp(x, y, z, theta = 30, phi = 30, 
      expand = 0.5)
par(mar=c(5.1, 4.1, 4.1, 2.1), lwd=1)

# Piechart
par(mar=c(0, 2, 1, 2), xpd=FALSE, cex=0.5)
pie.sales <- c(0.12, 0.3, 0.26, 0.16, 0.04, 0.12)
names(pie.sales) <- c("Blueberry", "Cherry",
                      "Apple", "Boston Cream", "Other", "Vanilla")
pie(pie.sales, col = gray(seq(0.3,1.0,length=6))) 

# Exercise: Can you generate these charts individually?  Try these functions 
# using another dataset. Be sure to work on the layout and margins


```

```{r}
# Creating a data frame for life expectancy data
life_expectancy_data <- data.frame(
  Year = c(2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021),
  Life_Expectancy_Years = c(80.7, 81.0, 81.0, 81.2, 81.4, 81.8, 81.8, 82.0, 82.5, 82.2, 82.4, 82.5, 82.6, 82.7, 82.2, 82.5),
  HPI_data = c(44.75, 45.75, 47.47, 44.20, 47.71, 48.60, 48.33, 48.92, 48.73, 47.94, 49.08, 49.66, 50.14, 50.85, 52.72, 51.96)
)

HPI_data <- structure(list(ISO = c("VUT", "SWE", "SLV", "CRI", "NIC", "DNK", 
"ESP", "PAN", "FRA", "CHL", "PRT", "MDA", "HND", "NLD", "NOR", 
"GTM", "FIN", "ITA", "GBR", "ROU", "PHL", "ISR", "GRC", "SVN", 
"HRV", "THA", "TJK", "IRL", "DZA", "DOM", "PER", "CZE", "ALB", 
"BRA", "DEU", "VNM", "AUT", "MAR", "ECU", "JAM", "ARG", "NZL", 
"MEX", "UZB", "ARM", "HUN", "COL", "CHE", "JPN", "BTN", "CHN", 
"MKD", "KGZ", "TWN", "LTU", "SVK", "LKA", "ISL", "POL", "IDN", 
"MUS", "URY", "BHR", "BIH", "SEN", "AUS", "MLT", "BGD", "MYS", 
"LVA", "LBY", "BEL", "BLR", "TUN", "EST", "KOR", "BGR", "NPL", 
"CAN", "GEO", "CYP", "UKR", "KHM", "MNE", "COG", "SRB", "GAB", 
"AZE", "ETH", "PRY", "TUR", "PAK", "IRQ", "CMR", "MOZ", "GHA", 
"JOR", "VEN", "MRT", "CIV", "EGY", "USA", "BOL", "MMR", "GIN", 
"UGA", "KEN", "NER", "SGP", "LAO", "MDG", "KAZ", "ZAF", "SAU", 
"IRN", "BEN", "BFA", "TZA", "LBR", "RWA", "IND", "RUS", "HTI", 
"MWI", "YEM", "ARE", "TGO", "HKG", "TKM", "COD", "TTO", "LUX", 
"SLE", "KWT", "MLI", "NAM", "NGA", "MNG", "ZWE", "LBN", "ZMB", 
"QAT", "TCD", "AFG", "LSO", "BWA", "CAF"), LifeExp = c(70.4, 
83, 70.7, 77, 73.8, 81.4, 83, 76.2, 82.5, 78.9, 81, 68.8, 70.1, 
81.7, 83.2, 69.2, 82, 82.9, 80.7, 74.2, 69.3, 82.3, 80.1, 80.7, 
77.6, 78.7, 71.6, 82, 76.4, 72.6, 72.4, 77.7, 76.5, 72.8, 80.6, 
73.6, 81.6, 74, 73.7, 70.5, 75.4, 82.5, 70.2, 70.9, 72, 74.5, 
72.8, 84, 84.8, 71.8, 78.2, 73.8, 70, 81, 73.7, 74.9, 76.4, 82.7, 
76.5, 67.6, 73.6, 75.4, 78.8, 75.3, 67.1, 84.5, 83.8, 72.4, 74.9, 
73.6, 71.9, 81.9, 72.4, 73.8, 77.1, 83.7, 71.8, 68.5, 82.7, 71.7, 
81.2, 71.6, 69.6, 76.3, 63.5, 74.2, 65.8, 69.4, 65, 70.3, 76, 
66.1, 70.4, 60.3, 59.3, 63.8, 74.3, 70.6, 64.4, 58.6, 70.2, 77.2, 
63.6, 65.7, 58.9, 62.7, 61.4, 61.6, 82.8, 68.1, 64.5, 69.4, 62.3, 
76.9, 73.9, 59.8, 59.3, 66.2, 60.7, 66.1, 67.2, 69.4, 63.2, 62.9, 
63.8, 78.7, 61.6, 85.5, 69.3, 59.2, 73, 82.6, 60.1, 78.7, 58.9, 
59.3, 52.7, 71, 59.3, 75, 61.2, 79.3, 52.5, 62, 53.1, 61.1, 53.9
), Wellbeing = c(7.12, 7.44, 6.43, 6.41, 6.1, 7.7, 6.47, 6.55, 
6.66, 6.44, 6.18, 5.96, 6.11, 7.31, 7.36, 6.3, 7.79, 6.47, 6.87, 
6.55, 5.97, 7.58, 6.1, 6.76, 6.29, 5.64, 5.29, 6.83, 5.22, 6.03, 
5.69, 6.94, 5.26, 6.01, 6.75, 5.54, 7.08, 5.33, 5.43, 5.81, 5.91, 
7.14, 5.99, 6.19, 5.3, 6.23, 5.29, 7.33, 6.09, 5.2, 5.86, 5.53, 
5.56, 6.25, 6.86, 6.42, 4.1, 7.56, 5.98, 5.43, 5.95, 6.5, 6.5, 
5.75, 4.9, 7.11, 6.44, 4.12, 6.01, 6.35, 5.5, 6.88, 5.6, 4.5, 
6.55, 6.11, 5.42, 4.62, 6.94, 4.91, 6.27, 5.31, 4.56, 5.39, 4.92, 
6.25, 5.08, 5.2, 4.1, 5.58, 4.37, 4.49, 5.09, 4.96, 5.18, 4.38, 
3.91, 5.11, 4.5, 5.06, 4.03, 6.96, 5.57, 4.31, 4.94, 4.22, 4.46, 
4.37, 6.59, 4.93, 3.89, 6.26, 5.6, 6.45, 4.79, 4.49, 4.64, 3.68, 
4.05, 3.4, 3.56, 5.45, 3.81, 3.64, 3.64, 6.73, 4.04, 5.32, 5.45, 
3.8, 6.2, 7.06, 3.71, 6.17, 4.11, 4.49, 4.48, 5.72, 3.15, 2.18, 
3.08, 6.5, 4.4, 2.44, 3.7, 3.5, 3.1), tCO2e = c(2.62, 8.7, 2.03, 
4.37, 2.61, 10.04, 7.12, 5.24, 7.91, 6.2, 6.36, 1.29, 2.19, 10.11, 
11.02, 2.47, 12.19, 8.49, 8.94, 5.42, 2.08, 12.25, 6.89, 9.26, 
6.58, 5.05, 1.48, 10.21, 3.11, 4.13, 3.19, 9.23, 3.67, 4.59, 
10.44, 3.79, 12.15, 3.38, 3.82, 3.78, 6.39, 13.91, 4.69, 5.69, 
3.43, 7.46, 3.74, 15.7, 11.66, 3.29, 8.38, 5.49, 4.09, 11.43, 
10.27, 9.34, 2.18, 17.82, 8.89, 3.19, 7.65, 10.51, 12.14, 7.85, 
1.47, 17.7, 14.82, 1.22, 8.97, 9.58, 5.89, 15.84, 6.59, 3.33, 
12.59, 14.39, 6.34, 2.09, 17.87, 4.59, 14.96, 6.45, 2.8, 9.59, 
1.84, 12.28, 3.87, 6.1, 0.2, 8.27, 6.27, 2.23, 6.79, 1.3, 1.6, 
1.13, 4.11, 7.37, 2.08, 1.23, 3.14, 19.59, 5.88, 2.46, 1.7, 1.08, 
1.36, 1.11, 23.24, 6.98, 1.08, 14.22, 7.08, 20.16, 10.5, 1.55, 
1.87, 1.61, 0.48, 0.7, 2.1, 12.09, 1.33, 0.69, 1.38, 26.78, 2.16, 
23.5, 14.23, 0.57, 21.81, 34.91, 0.89, 28.84, 3.76, 6.22, 1.55, 
24.67, 0.82, 4.91, 2.23, 42.2, 3.88, 1.14, 3.04, 10.28, 1.83), 
    Continent = c(8L, 3L, 1L, 1L, 1L, 3L, 3L, 1L, 3L, 1L, 3L, 
    7L, 1L, 3L, 3L, 1L, 3L, 3L, 3L, 7L, 8L, 4L, 3L, 7L, 7L, 8L, 
    7L, 3L, 4L, 1L, 1L, 7L, 7L, 1L, 3L, 8L, 3L, 4L, 1L, 1L, 1L, 
    2L, 1L, 7L, 7L, 7L, 1L, 3L, 8L, 6L, 8L, 7L, 7L, 8L, 7L, 7L, 
    6L, 3L, 7L, 8L, 5L, 1L, 4L, 7L, 5L, 2L, 3L, 6L, 8L, 7L, 4L, 
    3L, 7L, 4L, 7L, 8L, 7L, 6L, 2L, 7L, 3L, 7L, 8L, 7L, 5L, 7L, 
    5L, 7L, 5L, 1L, 4L, 6L, 4L, 5L, 5L, 5L, 4L, 1L, 5L, 5L, 4L, 
    2L, 1L, 8L, 5L, 5L, 5L, 5L, 8L, 8L, 5L, 7L, 5L, 4L, 4L, 5L, 
    5L, 5L, 5L, 5L, 6L, 7L, 1L, 5L, 4L, 4L, 5L, 8L, 7L, 5L, 1L, 
    3L, 5L, 4L, 5L, 5L, 5L, 8L, 5L, 4L, 5L, 4L, 5L, 6L, 5L, 5L, 
    5L)), class = "data.frame", row.names = c(NA, -147L))
HPI_data$Continent<-as.factor(HPI_data$Continent)

# Display the data frame
par(mar = c(5, 5, 4, 2))   # Set the canvas for a plot with the specified margin.
plot.new()
plot.window(range(life_expectancy_data$Year), c(min(life_expectancy_data$Life_Expectancy_Years), max(life_expectancy_data$Life_Expectancy_Years)))
lines(life_expectancy_data$Year, life_expectancy_data$Life_Expectancy_Years,type="l")
axis(1, at=seq(min(life_expectancy_data$Year),max(life_expectancy_data$Year),1))
axis(2, at=seq(min(life_expectancy_data$Life_Expectancy_Years),max(life_expectancy_data$Life_Expectancy_Years),1))
title("Line Plot: Life Expectancy for each year")

# Plot 2
par(mar = c(5, 5, 4, 2))   # Set the canvas for a plot with the specified margin.
plot.new()
plot.window(c(min(life_expectancy_data$HPI_data),max(life_expectancy_data$HPI_data)), c(min(life_expectancy_data$Life_Expectancy_Years), max(life_expectancy_data$Life_Expectancy_Years)))
points(life_expectancy_data$HPI_data, life_expectancy_data$Life_Expectancy_Years)
abline(v=mean(life_expectancy_data$HPI_data),h=mean(life_expectancy_data$Life_Expectancy_Years),lty=3,col="grey")
axis(1, at=seq(min(life_expectancy_data$HPI_data),max(life_expectancy_data$HPI_data),1))
axis(2, at=seq(min(life_expectancy_data$Life_Expectancy_Years),max(life_expectancy_data$Life_Expectancy_Years),1))
mtext("HPI", side=1, line=2, cex=0.8)
mtext("Life Expectancy", side=2, line=2, las=0, cex=0.8)
box(bty="u")
text(mean(life_expectancy_data$HPI_data)*1.025, mean(life_expectancy_data$Life_Expectancy_Years), "Means of two vars.")
points(mean(life_expectancy_data$HPI_data), mean(life_expectancy_data$Life_Expectancy_Years), pch=19,cex=1)
title("Point Plot: Life Expectancy vs HPI")

# Plot 3 
hist(HPI_data$tCO2e)

# Plot 4
boxplot(HPI_data$Wellbeing~HPI_data$Continent)

# Plot 5
# Persp
# 0.5 to include z axis label

# Scale the sorted LifeExp and Wellbeing values
sorted_data <- HPI_data[order(HPI_data$Wellbeing), ]
x <- order(scale(sorted_data$Wellbeing)[1:30])
y <- x

# Create z values (you can use any variable here)
f <- function(x,y) { r <- sqrt(x^2+y^2); 10 * sin(r)/r }
z <- outer(x, y, f)

par(mar=c(0, 0.5, 0, 0), lwd=0.5)
persp(x, y, z, theta = 30, phi = 30, 
      expand = 0.5)
par(mar=c(5.1, 4.1, 4.1, 2.1), lwd=1)

# Plot 6

# Piechart
# Aggregate CO2 emissions by continent
cont_co2 <- aggregate(x = HPI_data$tCO2e, by = list(HPI_data$Continent), FUN = sum)[, 2]
# Names for each continent
continent_names <- c("Latin America", "N. America & Oceania", "Western Europe", "Middle East", "Africa", "South Asia", "Eastern Europe & Central Asia", "East Asia")

# Calculate percentage of each value
percentages <- round(cont_co2 / sum(cont_co2) * 100, 2)

# Combine names with percentages
labels <- paste(continent_names, "-", percentages, "%", sep="")

# Sort cont_co2 and labels in decreasing order
order_decreasing <- order(cont_co2, decreasing = TRUE)
cont_co2_sorted <- cont_co2[order_decreasing]
labels_sorted <- labels[order_decreasing]
continent_names_sorted <-continent_names[order_decreasing]
names(cont_co2_sorted)<-continent_names_sorted
# Create the pie chart
par(mar = c(0, 2, 1, 2), xpd = FALSE, cex = 0.7)
pie(cont_co2_sorted, col = gray(seq(0.3, 1.0, length = 8))) 

# Add the legend
legend("topright", legend = labels_sorted, fill = gray(seq(0.3, 1.0, length = 8)), cex = 0.8)

```
