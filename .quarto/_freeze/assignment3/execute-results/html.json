{
  "hash": "412ecde0f9c7d96a7baf311409d70f7e",
  "result": {
    "markdown": "---\ntitle: \"Assignment3\"\n---\n\n\n1.  **Choose one of the six charts and explain how it is configured by adding documentation to the codes.**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Random data\nY <- rnorm(50)\n# Make sure no Y exceed [-3.5, 3.5]\nY[Y < -3.5 | Y > 3.5] <- NA # Selection/set range\nx <- seq(-3.5, 3.5, .1)\ndn <- dnorm(x)\npar(mar=c(4.5, 4.1, 3.1, 0))\nhist(Y, breaks=seq(-3.5, 3.5), ylim=c(0, 0.5), col=\"gray80\", freq=FALSE)\nlines(x, dnorm(x), lwd=2)\n```\n\n::: {.cell-output-display}\n![](assignment3_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n```\n:::\n\n\nThis code is to draw histogram with randomly generated values.\n\n\\(1\\) Generate random data based on normal distribution (mu=1, sd = 0)\n\nY \\<- rnorm(50)\n\n\\(2\\) Filter data which make sure values between -3.5 and +3.5\n\nY\\[Y \\< -3.5 \\| Y \\> 3.5\\] \\<- NA \\# Selection/set range\n\n\\(3\\) Generate squential values with 0.1 interval with minimum -3.5 and maximum 3.5\n\nx \\<- seq(-3.5, 3.5, .1)\n\n\\(4\\) \\[irrelevent to histogram\\] Get probability of squential values on normal distribution.\n\ndn \\<- dnorm(x)\n\n\\(5\\) Set margins for plot area in order of c(bottom, left, top, right)\n\npar(mar=c(4.5, 4.1, 3.1, 0))\n\n\\(6\\) Draw histogram of Y\n\n-   Set breaks between -3.5 and 3.5 for x-axis ticks\n\n-   Set the range of Y values (-3.5 \\~ 3.5) to display using ylim\n\n-   Set color for the plot as 80% black for gray\n\n-   Show probability instead of frequency by setting freq as FALSE\n\nhist(Y, breaks=seq(-3.5, 3.5), ylim=c(0, 0.5), col=\"gray80\", freq=FALSE)\n\n\\(7\\) Draw normal distribuiton guideline to see if data Y follows normal distribution.\n\nlines(x, dnorm(x), lwd=2)\n\n\\(8\\) Set plot margin again.\n\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n\n2.1. Compare the regression models\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create four model objects\ndata(anscombe)  # Load Anscombe's data\nlm1 <- lm(y1 ~ x1, data=anscombe)\nsummary(lm1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = y1 ~ x1, data = anscombe)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-1.92127 -0.45577 -0.04136  0.70941  1.83882 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept)   3.0001     1.1247   2.667  0.02573 * \nx1            0.5001     0.1179   4.241  0.00217 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6665,\tAdjusted R-squared:  0.6295 \nF-statistic: 17.99 on 1 and 9 DF,  p-value: 0.00217\n```\n:::\n\n```{.r .cell-code}\nlm2 <- lm(y2 ~ x2, data=anscombe)\nsummary(lm2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = y2 ~ x2, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.9009 -0.7609  0.1291  0.9491  1.2691 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept)    3.001      1.125   2.667  0.02576 * \nx2             0.500      0.118   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.237 on 9 degrees of freedom\nMultiple R-squared:  0.6662,\tAdjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002179\n```\n:::\n\n```{.r .cell-code}\nlm3 <- lm(y3 ~ x3, data=anscombe)\nsummary(lm3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = y3 ~ x3, data = anscombe)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.1586 -0.6146 -0.2303  0.1540  3.2411 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept)   3.0025     1.1245   2.670  0.02562 * \nx3            0.4997     0.1179   4.239  0.00218 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6663,\tAdjusted R-squared:  0.6292 \nF-statistic: 17.97 on 1 and 9 DF,  p-value: 0.002176\n```\n:::\n\n```{.r .cell-code}\nlm4 <- lm(y4 ~ x4, data=anscombe)\nsummary(lm4)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\nCall:\nlm(formula = y4 ~ x4, data = anscombe)\n\nResiduals:\n   Min     1Q Median     3Q    Max \n-1.751 -0.831  0.000  0.809  1.839 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)   \n(Intercept)   3.0017     1.1239   2.671  0.02559 * \nx4            0.4999     0.1178   4.243  0.00216 **\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.236 on 9 degrees of freedom\nMultiple R-squared:  0.6667,\tAdjusted R-squared:  0.6297 \nF-statistic:    18 on 1 and 9 DF,  p-value: 0.002165\n```\n:::\n:::\n\n\n2.2. Compare different ways to create the plots (e.g. changing colors, line types, plot characters)\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(2, 2),mar=c(4.5, 4.1, 3.1, 0.3))\nplot(anscombe$x1,anscombe$y1,col=\"blue\")\nabline(coefficients(lm1))\nplot(anscombe$x2,anscombe$y2)\nabline(coefficients(lm2),lty=3)\nplot(anscombe$x3,anscombe$y3)\nabline(coefficients(lm3),col=\"red\")\nplot(anscombe$x4,anscombe$y4,xlab=\"fourth X\",ylab=\"fourth Y\")\nabline(coefficients(lm4))\n```\n\n::: {.cell-output-display}\n![](assignment3_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\nTo make plots to compare them effectively, we can adjust plot elements.\n\n1\\) Change Color for data : It helps identify which data should be focused.\n\n2\\) Change guide line symbol: To highlight the distribution of data, change guideline symbol\n\n3\\) Chang guide line color: To highlight the trend line of data, change guideline color\n\n**3.Can you finetune the charts without using other packages (consult RGraphics by Murrell)?**\n\na.  Use a serif font\nb.  Try non-default colors\nc.  Use own plotting character\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Custom boxplot with fine-tuned aesthetics\n\n# Set graphical parameters for font and layout\npar(family = \"serif\", mar=c(5, 5, 5, 0))\n\n# Define custom colors\ncolors_vc <- \"lightblue\"  # Vitamin C - Ascorbic Acid\ncolors_oj <- \"lightgreen\" # Orange Juice\n\n# Create boxplot for 'VC' (Vitamin C Ascorbic Acid group)\nboxplot(len ~ dose, data = ToothGrowth,\n        boxwex = 0.25, at = 1:3 - 0.2,\n        subset= supp == \"VC\", col=colors_vc, # Use custom color\n        xlab=\"\",\n        ylab=\"Tooth Length\", ylim=c(0,35),\n        pch=17) # Custom plotting character (triangle)\n\n# Add x-axis label\nmtext(\"Vitamin C Dose (mg)\", side=1, line=2.5, cex=0.8)\n\n# Overlay boxplot for 'OJ' (Orange Juice group)\nboxplot(len ~ dose, data = ToothGrowth, add = TRUE,\n        boxwex = 0.25, at = 1:3 + 0.2,\n        subset= supp == \"OJ\", col=colors_oj, # Use custom color\n        pch=19) # Custom plotting character (circle)\n\n# Add a legend with the custom colors\nlegend(1.5, 9, c(\"Ascorbic Acid\", \"Orange Juice\"), \n       fill = c(colors_vc, colors_oj), \n       bty=\"n\")\n```\n\n::: {.cell-output-display}\n![](assignment3_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Reset graphical parameters\npar(mar=c(5.1, 4.1, 4.1, 2.1))\n```\n:::\n\n\n4.  **How about with ggplot2? (use tidyverse package)**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the necessary package\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\n# Custom colors for the boxplot\ncustom_colors <- c(\"lightblue\", \"lightgreen\")\n\n# Create the customized boxplot\nggplot(ToothGrowth, aes(x = factor(dose), y = len, fill = supp)) +\n  \n  # Boxplot with custom fill colors and adjusted dodge width\n  geom_boxplot(position = position_dodge(0.8), width = 0.5) +\n  \n  # Add jittered points with custom shape\n  geom_jitter(position = position_dodge(0.8), shape = 17, size = 2, color = \"black\") +\n  \n  # Set axis labels\n  labs(x = \"Vitamin C Dose (mg)\", y = \"Tooth Length\") +\n  \n  # Custom fill colors for the two groups\n  scale_fill_manual(values = custom_colors, labels = c(\"Ascorbic Acid\", \"Orange Juice\")) +\n  \n  # Add a theme with a serif font\n  theme_minimal(base_family = \"serif\") +\n  \n  # Adjust the legend\n  theme(legend.title = element_blank(),\n        legend.position = \"top\")\n```\n\n::: {.cell-output-display}\n![](assignment3_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "assignment3_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}