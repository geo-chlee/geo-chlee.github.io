{
  "hash": "0467a2789cf71a8a8ffd26d39a4f73f8",
  "result": {
    "markdown": "---\n  title: \"Assignment 4\"\n---\n\n::: {.cell}\n\n```{.r .cell-code}\n# Team GeoVIS\n# Members : Changho Lee, Americo Gamarra, Brennan Stout, Umme Kulsum - Coordinator\n\n# Team GeoVIS\n# Members : Changho Lee, Americo Gamarra, Brennan Stout, Umme Kulsum - Coordinator\n\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\ndata <- mpg\nfont <- \"serif\"\n\ndata$model<-paste0(toupper(substr(data$model, 1, 1)), substr(data$model, 2, nchar(data$model)))\ndata$manufacturer<-paste0(toupper(substr(data$manufacturer, 1, 1)), substr(data$manufacturer, 2, nchar(data$manufacturer)))\n## 1st Graph\nlibrary(dplyr)\nlibrary(RColorBrewer)\nuniq <- count(unique(data,vars = c(manufacturer, cty)),vars=manufacturer)\nqual_colors <- colorRampPalette(brewer.pal(9, \"PuRd\"))(20)\nnewdata <- data[ which(data$manufacturer=='ford'), ]\ntotal <- sum(uniq$n)\nwidths <- c()\nfor (m in 1:length(uniq$vars)){\nwidths <- append(widths, (uniq$n[m]/total)*100)\n}\nheights = uniq$n\npar( mar= c(4,4,1,1),family=font )\np <- barplot(heights, widths, space=0, \n           col = qual_colors, xlab = \"Percent of cars\", ylab = \"Number of models\")\ntext(x = p, y = heights/2, labels = uniq$vars, cex=ifelse(uniq$vars%in%c(\"Land rover\",\"Lincoln\",\"Mercury\",\"Pontiac\"),0.5,1), srt=90)\naxis(1, seq(0,100,5))\npolygon(c(42,42,72,72), c(25, 30, 30, 25), col=\"snow\")\ntext(57, 28, \"Percent of market\\nby manufacturer\", cex=1)\n```\n\n::: {.cell-output-display}\n![](assignment4_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n\n```{.r .cell-code}\n## 2nd Graph\n# Get the 6 largest manufacturers by count\ntop_makers <- mpg %>%\ncount(manufacturer) %>%\ntop_n(6, n) %>%\npull(manufacturer)\n\n# Filter the data to include only the top 6 manufacturers\nmpg_filtered <- mpg %>%\nfilter(manufacturer %in% top_makers)\n\n# Create the faceted histograms for city mpg\nggplot(mpg_filtered, aes(x = cty)) +\ngeom_histogram(binwidth = 2, fill = \"violetred2\", color = \"white\") +\nfacet_grid(class ~ manufacturer) +  # Facet by class and cylinders\nlabs(x = \"City MPG\", y = \"Count\", title = \"City MPG Distribution by Manufacturer, Class, and Cylinder\", family=font) +\ntheme_minimal() +\ntheme(\n  strip.text = element_text(size = 10,family=font),    # Adjust facet label size\n  panel.spacing = unit(1, \"lines\"),        # Add spacing between facets\n  axis.text.x = element_text(size = 8,family=font),    # Adjust size of x-axis text\n  axis.text.y = element_text(size = 8, family=font),     # Adjust size of y-axis text\n  axis.title.x = element_text(size = 12, family = font),  # Set x-axis label font and size\n  axis.title.y = element_text(size = 12, , family = font),  # Set y-axis label font and size\n  plot.title = element_text(size = 14, family = font, hjust = 0.5),\n  panel.grid = element_blank(),\n  panel.border = element_rect(color = \"gray40\", fill = NA, size = 0.6)\n)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: The `size` argument of `element_rect()` is deprecated as of ggplot2 3.4.0.\nℹ Please use the `linewidth` argument instead.\n```\n:::\n\n::: {.cell-output-display}\n![](assignment4_files/figure-html/unnamed-chunk-1-2.png){width=672}\n:::\n\n```{.r .cell-code}\n## 3rd Graph \nmh <- aggregate(hwy ~ class, data = data, mean)\nmc <- aggregate(cty ~ class, data = data, mean)\n\npar(mfrow = c(1, 2), mar = c(5,6,2,2), mgp = c(4, 1, 0.8), family = font, cex.main = 1.2, \n  cex.lab = 1, font.main = 1, \n  font.lab = 1, font.axis = 1, cex.axis = 0.7)\n\n# mean highway MPG\nbarplot(mh$hwy, names.arg = mh$class,\n      horiz = TRUE, col = \"violetred2\", border = \"black\",\n      xlab = \"Mean MPG\", ylab = \"Type of Vehicle\",\n      xlim = c(0, 35),\n      main = \"Highway\", las = 1)\nabline(v = 0, lwd = 4, col = \"black\") \n\n# mean city MPG\nbarplot(mc$cty, names.arg = mc$class, \n      horiz = TRUE, col = \"white\", border = \"black\", \n      xlab = \"Mean MPG\", ylab = \"\", \n      xlim = c(0, 35),\n      main = \"City\", las = 1)\nabline(v = 0, lwd = 4, col = \"black\") \n```\n\n::: {.cell-output-display}\n![](assignment4_files/figure-html/unnamed-chunk-1-3.png){width=672}\n:::\n\n```{.r .cell-code}\n## 4th Graph\ndata_sum <- mpg %>%\ngroup_by(class) %>%\nsummarise(mh = mean(hwy), mc = mean(cty))\n\nggplot(data_sum, aes(x = class)) +\ngeom_col(aes(y = mh), fill = \"violetred2\", width = 0.4, \n         position = position_nudge(x = 0.1)) +\ngeom_col(aes(y = mc), fill = 'white', color = \"black\", \n         width = 0.4, position = position_nudge(x = -0.1)) +\nlabs(x = \"Type of Vehicle\", y = \"Mean Miles per Gallon\", title = \"Mean MPG by Class and Vehicle Type\") +\ntheme_minimal() +\ntheme(panel.grid = element_blank(),axis.line = element_line(color = \"black\"), \n      axis.text.x = element_text(angle = 45, hjust = 1, family = font), \n      axis.text.y = element_text(family = font),\n      axis.title.x = element_text(family = font, size = 12), \n      axis.title.y = element_text(family = font, size = 12), \n      plot.title = element_text(family = font, \n                                size = 14, hjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](assignment4_files/figure-html/unnamed-chunk-1-4.png){width=672}\n:::\n:::\n",
    "supporting": [
      "assignment4_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}